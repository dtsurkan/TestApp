//
//  CitiesInteractor.swift
//  Cities
//
//  Created by Dima Tsurkan on 9/28/17.
//  Copyright (c) 2017 Dima Tsurkan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CitiesBusinessLogic {
    func loadCities(request: Cities.FetchCities.Request)
    func loadWeather(request: Cities.FetchWeather.Request)
}

protocol CitiesDataStore {
    //var name: String { get set }
}

class CitiesInteractor: CitiesBusinessLogic, CitiesDataStore {
    var presenter: CitiesPresentationLogic?
    var worker: CitiesWorker?
  
    // MARK: List
  
    func loadCities(request: Cities.FetchCities.Request) {
        worker = CitiesWorker()
        let cities = worker?.fetchCities()
        presenter?.presentCities(cities: cities!)
    }
    
    func loadWeather(request: Cities.FetchWeather.Request) {
        worker = CitiesWorker()
        let city = request.city
        worker?.fetchWeather(city: city, successHandler: { (weather) in
            city.weatherDetails = weather
            self.presenter?.presentCity(city: city)
        }, failureHandler: { (error) in
            // handle error
        })
    }
}
